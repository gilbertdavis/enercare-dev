<?php
// $Id: emf.install,v 1.11 2009/11/09 15:00:33 davyvandenbremt Exp $

/**
 * @file
 * Installation
 *
 * @author Davy Van Den Bremt
 */

/**
 * Implementation of hook_install().
 */
function emf_install() {
  drupal_install_schema('emf');

  $link = array('!link' => l(st('Administer > Site configuration > E-mail Marketing Framework'), 'admin/settings/emf'));
  drupal_set_message(st("E-mail Marketing Framework module settings are available under !link", $link));
}

/**
 * Implementation of hook_uninstall().
 */
function emf_uninstall() {
  drupal_uninstall_schema('emf');

  db_query("DELETE FROM {variable} WHERE name LIKE 'emf_%'");
  cache_clear_all('variables', 'cache');
}

/**
 * Implementation of hook_schema().
 */
function emf_schema() {

  // lists
  $schema['emf_list'] = array(
    'fields' => array(
      'lid'                => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
      'name_api'           => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'status_api'         => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'status'             => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'name'               => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'name_action'        => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'name_action_long'   => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'description'        => array('type' => 'text', 'not null' => TRUE),
      'field_mapping'      => array('type' => 'text', 'not null' => TRUE),
      'language'           => array('type' => 'varchar', 'length' => '12', 'not null' => TRUE, 'default' => ''),
    ),
    'primary key' => array('lid'),
  );

  // requests
  $schema['emf_request'] = array(
    'fields' => array(
      'mail'      => array('type' => 'varchar', 'length' => '128', 'not null' => TRUE),
      'lid'       => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
      'type'      => array('type' => 'varchar', 'length' => '32', 'not null' => TRUE),
      'fields'    => array('type' => 'text', 'not null' => TRUE),
      'timestamp' => array('type' => 'int', 'not null' => TRUE),
    ),
    'primary key' => array('mail', 'lid'),
    'indexes' => array(
      'timestamp' => array('timestamp'),
      'type' => array('type'),
    ),
  );

  // subscriptions
  $schema['emf_subscription'] = array(
    'fields' => array(
      'mail'   => array('type' => 'varchar', 'length' => '128', 'not null' => TRUE),
      'lid'    => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
    ),
    'primary key' => array('mail', 'lid'),
  );

  // list roles
  $schema['emf_list_roles'] = _emf_schema_list_roles();

  return $schema;
}

/**
 * Implementation of hook_requirements().
 */
function emf_requirements($phase) {
  $requirements = array();

  $t = get_t();

  if ($phase == 'runtime') {

    $plugins = emf_get_plugins();

    // Raise warning if no plugin modules have been enabled.
    if (empty($plugins)) {
      $requirements['emf_no_plugin'] = array(
        'title' => $t('No E-mail Marketing Framework plugin installed'),
        'description' => $t('You have not installed a E-mail Marketing Framework plugin yet. E-mail Marketing Framework will not work correctly.'),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('Not installed'),
      );
    }

    // Raise warning if multiple plugin modules have been enabled.
    if (count($plugins) > 1) {
      $requirements['emf_multiple_plugins'] = array(
        'title' => $t('Multiple E-mail Marketing Framework plugins installed'),
        'description' => $t('You have installed multiple E-mail Marketing Framework plugin. E-mail Marketing Framework only supports 1 active plugin at a time (at this moment).'),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('Not installed'),
      );
    }

    // Raise warning if some lists have API issues.
    $inactive_lists = db_result(db_query("SELECT count(*) FROM {emf_list} WHERE status_api = 0"));
    if ($inactive_lists > 0) {
      $requirements['emf_inactive_lists'] = array(
        'title' => $t('E-mail Marketing Framework lists'),
        'description' => $t('Some lists could not be found on your e-mail marketing service anymore.'),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('List not found'),
      );
    }
  }

  return $requirements;
}

function emf_update_6001() {
  $ret = array();

  $result = db_query("SELECT lid, field_mapping FROM {emf_list}");
  while ($row = db_fetch_object($result)) {
    $lid = $row->lid;
    $field_mapping = unserialize($row->field_mapping);
    foreach ($field_mapping as $field => $mapping) {
      if (isset($field_mapping[$field]->common_block_show)) {
        $field_mapping[$field]->common_form_show = $field_mapping[$field]->common_block_show;
        unset($field_mapping[$field]->common_block_show);
      }
    }
    db_query("UPDATE {emf_list} SET field_mapping = '%s' WHERE lid = '%s'", serialize($field_mapping), $lid);
  }

  return $ret;
}

function _emf_schema_list_roles() {
  return array(
    'fields' => array(
      'lid' => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
      'rid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
    ),
    'primary key' => array('lid', 'rid'),
    'indexes' => array(
      'rid' => array('rid'),
      'lid' => array('lid'),
    ),
  );
}

/**
 * Adding list roles table.
 */
function emf_update_6002() {
  $ret = array();

  $schema['emf_list_roles'] = _emf_schema_list_roles();

  db_create_table($ret, 'emf_list_roles', $schema['emf_list_roles']);

  // get all old permissions
  $old_permissions = array();
  $lists = emf_db_get_lists(TRUE);
  foreach ($lists as $list) {
    $old_permissions['subscribe to '. $list->name_api] = $list->lid;
  }

  // migrate role permissions to new system
  $result = db_query("SELECT rid, perm FROM {permission}");
  while ($row = db_fetch_object($result)) {
    $rid = $row->rid;
    $permissions = explode(', ', $row->perm);
    foreach ($permissions as $permission) {
      if (in_array($permission, array_keys($old_permissions))) {
        $lid = $old_permissions[$permission];
        $ret[] = update_sql(sprintf("INSERT INTO {emf_list_roles} (lid, rid) VALUES ('%s', %d)", $lid, $rid));
      }
    }
  }

  return $ret;
}

function emf_update_6003() {
  $return = array();

  db_add_field($return, 'emf_list', 'language', array('type' => 'varchar', 'not null' => TRUE, 'length' => '12', 'default' => ''));

  return $return;
}

/**
 * Removing <?php and ?> from field mapping value.
 */
function emf_update_6004() {
  $ret = array();

  $result = db_query("SELECT lid, field_mapping FROM {emf_list}");
  while ($row = db_fetch_object($result)) {
    $lid = $row->lid;
    $field_mapping = unserialize($row->field_mapping);
    foreach ($field_mapping as $field => $mapping) {
      if ($mapping->mapping_type == 'php') {
        $mapping->mapping_value = htmlentities(trim(preg_replace('/\?>\w*$/', '', preg_replace('/^[^<]*<\?php/i', '', $mapping->mapping_value))));
      }
    }
    db_query("UPDATE {emf_list} SET field_mapping = '%s' WHERE lid = '%s'", serialize($field_mapping), $lid);
  }

  return $ret;
}